<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_Transfer" Id="{18dc2db3-5ecd-4211-80b1-8da0d86e8f52}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Transfer
VAR_INPUT
	nLine					: INT;
	fTimer_Comb				: REAL;
	fTimer_Clip				: REAL;
	fTimer_Move_Comb		: REAL;
END_VAR
VAR_OUTPUT
	nDoneTransfer			: INT;
	bDoneTransfer			: BOOL;
END_VAR
VAR
	fbCylinder_Comb			: FB_Cylinder;
	fbCylinder_Clip			: FB_Cylinder;
	fbCylinder_Move_Comb	: FB_Cylinder;
	// ===== SIM COMPONENTS ==============
	fbCylinderSim_Comb		: FB_Cylinder_Sim;
	fbCylinderSim_Clip		: FB_Cylinder_Sim;
	fbCylinderSim_Move_Comb	: FB_Cylinder_Sim;
	// ===== INTERFACES ==================
	iCylinder_Comb			: I_Cylinder;
	iCylinder_Clip			: I_Cylinder;
	iCylinder_Move_Comb		: I_Cylinder;
	//====== VAR MOTHOD ==================
	nState					: INT;
	nStateEnable			: INT;
	nState_Reset			: INT;
	tTimer_Reset			: TON;
	fbTimer_Comb			: TON;
	fbTimer_Clip			: TON;
	fbTimer_Move_Comb		: TON;
	//======== VAR HMI Transfer Setting ====
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bSimMode THEN
	iCylinder_Clip 	:= fbCylinderSim_Clip;
	fbCylinderSim_Clip();
	iCylinder_Comb	:= fbCylinderSim_Comb;
	fbCylinderSim_Comb();
	iCylinder_Move_Comb	:= fbCylinderSim_Move_Comb;
	fbCylinderSim_Move_Comb();
ELSE
	iCylinder_Clip 	:= fbCylinder_Clip;
	fbCylinder_Clip(id := 1);
	iCylinder_Comb	:= fbCylinder_Comb;
	fbCylinder_Comb(id := 1);
	iCylinder_Move_Comb	:= fbCylinder_Move_Comb;
	fbCylinder_Move_Comb(id := 1);
END_IF]]></ST>
    </Implementation>
    <Method Name="Auto" Id="{a18e3b75-c925-4aab-bb01-50e79f209c3d}">
      <Declaration><![CDATA[METHOD Auto : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbTimer_Clip(PT := REAL_TO_TIME(fTimer_Clip)*1000);
fbTimer_Comb(PT := REAL_TO_TIME(fTimer_Comb)*1000);
fbTimer_Move_Comb(PT := REAL_TO_TIME(fTimer_Move_Comb)*1000);
CASE nState OF 
	0: // init value
		Auto		:= FALSE;
		fbTimer_Move_Comb(IN := FALSE);
		fbTimer_Clip(IN	:= FALSE);
		fbTimer_Comb(IN	:= FALSE);
		nState		:= 1;
	1: // Cylinder Clip and Comb Extend hold cup
		bDoneTransfer 	:= FALSE;
		iCylinder_Clip.Extend();
		iCylinder_Comb.Extend();
		fbTimer_Clip(IN	:= TRUE);
		fbTimer_Comb(IN	:= TRUE);
		IF iCylinder_Clip.bIsExtend AND iCylinder_Comb.bIsExtend THEN
			nState	:= 2;
		ELSIF fbTimer_Comb.Q AND NOT fbTimer_Clip.Q THEN
			IF nLine = 1 THEN
				F_SetError(18,nLine := 1);
			ELSIF nLine = 2 THEN
				F_SetError(40,nLine := 2);
			END_IF
		ELSIF fbTimer_Clip.Q AND NOT fbTimer_Comb.Q THEN
			IF nLine = 1 THEN
				F_SetError(20,nLine := 1);
			ELSIF nLine = 2 THEN
				F_SetError(42,nLine := 2);
			END_IF
		ELSIF iCylinder_Clip.bIsExtend AND fbTimer_Comb.Q THEN
			IF nLine = 1 THEN
				F_SetError(18,nLine := 1);
			ELSIF nLine = 2 THEN
				F_SetError(40,nLine := 2);
			END_IF
		ELSIF iCylinder_Comb.bIsExtend AND fbTimer_Clip.Q THEN
			IF nLine = 1 THEN
				F_SetError(20,nLine := 1);
			ELSIF nLine = 2 THEN
				F_SetError(42,nLine := 2);
			END_IF
		ELSIF fbTimer_Comb.Q AND fbTimer_Clip.Q THEN
			IF nLine = 1 THEN
				F_SetError(18,nLine := 1);
			ELSIF nLine = 2 THEN
				F_SetError(40,nLine := 2);
			END_IF
		END_IF
	2: // Cylinder_Move_Comb Extend move cup
		fbTimer_Clip(IN	:= FALSE);
		fbTimer_Comb(IN	:= FALSE);
		fbTimer_Move_Comb(IN := TRUE);
		iCylinder_Move_Comb.Extend();
		IF iCylinder_Move_Comb.bIsExtend THEN
			nState	:= 3;
		ELSIF fbTimer_Move_Comb.Q THEN
			IF nLine = 1 THEN
				F_SetError(22,nLine := 1);
			ELSIF nLine = 2 THEN
				F_SetError(44,nLine := 2);
			END_IF
		END_IF
	3: // retract clip and comb
		fbTimer_Comb(IN := TRUE);
		fbTimer_Move_Comb(IN := FALSE);
		iCylinder_Comb.Retract();
		IF iCylinder_Comb.bIsRetract THEN
			nState	:= 33;
		ELSIF fbTimer_Comb.Q THEN
			IF nLine = 1 THEN
				F_SetError(17,nLine := 1);
			ELSIF nLine = 2 THEN
				F_SetError(39,nLine := 2);
			END_IF
		END_IF
	33:
		fbTimer_Clip(IN := TRUE);
		fbTimer_Comb(IN := FALSE);
		iCylinder_Clip.Retract();
		IF iCylinder_Clip.bIsRetract THEN
			nDoneTransfer	:= nDoneTransfer + 1;
			bDoneTransfer 	:= TRUE;
			IF nLine = 1 THEN 
				bToDropcup1			:= TRUE;
			ELSIF nLine = 2 THEN
				bToDropcup2			:= TRUE;
			END_IF
			IF nDoneTransfer > 8 THEN
				nDoneTransfer := 8;
			END_IF
			nState	:= 4;
		ELSIF fbTimer_Clip.Q THEN
			IF nLine = 1 THEN
				F_SetError(19,nLine := 1);
			ELSIF nLine = 2 THEN
				F_SetError(41,nLine := 2);
			END_IF
		END_IF
	4://Move_Comb Retract
		fbTimer_Clip(IN := FALSE);
		fbTimer_Move_Comb(IN := TRUE);
		iCylinder_Move_Comb.Retract();
		IF iCylinder_Move_Comb.bIsRetract THEN
			nState	:= 5;
		ELSIF fbTimer_Move_Comb.Q THEN
			IF nLine = 1 THEN
				F_SetError(21,nLine := 1);
			ELSIF nLine = 2 THEN
				F_SetError(43,nLine := 2);
			END_IF
		END_IF
	5:// Complete
		fbTimer_Move_Comb(IN := FALSE);
		Auto		:= TRUE;
		nState		:= 0;	
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="Enable" Id="{d751481a-6f77-432e-bcda-c667c2a94dd0}">
      <Declaration><![CDATA[METHOD Enable : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbTimer_Clip(PT := REAL_TO_TIME(fTimer_Clip)*1000);
fbTimer_Comb(PT := REAL_TO_TIME(fTimer_Comb)*1000);
fbTimer_Move_Comb(PT := REAL_TO_TIME(fTimer_Move_Comb)*1000);
CASE nStateEnable OF
	0:// init 
		Enable					:= FALSE;
		fbTimer_Clip(IN	:= FALSE);
		fbTimer_Comb(IN	:= FALSE);
		fbTimer_Move_Comb(IN := FALSE);
		nStateEnable			:= 1;
	1:// Retract Comb and Clip
		iCylinder_Clip.Retract();
		iCylinder_Comb.Retract();
		fbTimer_Clip(IN	:= TRUE);
		fbTimer_Comb(IN	:= TRUE);
		IF iCylinder_Clip.bIsRetract AND iCylinder_Comb.bIsRetract THEN
			nStateEnable		:= 2;
		ELSIF fbTimer_Clip.Q AND NOT fbTimer_Comb.Q THEN
			nStateEnable		:= 10;
		ELSIF fbTimer_Comb.Q AND NOT fbTimer_Clip.Q THEN
			nStateEnable		:= 11;
		END_IF	
	2:// Retract MoveComb
		fbTimer_Clip(IN	:= FALSE);
		fbTimer_Comb(IN	:= FALSE);
		iCylinder_Move_Comb.Retract();
		fbTimer_Move_Comb.IN	:= TRUE;
		IF iCylinder_Move_Comb.bIsRetract THEN
			nStateEnable		:= 3;
		ELSIF fbTimer_Move_Comb.Q THEN
			nState				:= 12;
		END_IF
	3:// Enable
		fbTimer_Move_Comb(IN := FALSE);
		Enable					:= TRUE;
	10:// Error Cylinder Clip
		IF nLine = 1 THEN
			F_SetError(17,nLine := 1);
			nState	:= 99;
		ELSIF nLine = 2 THEN
			F_SetError(35,nLine := 2);
			nState	:= 99;
		END_IF
	11:// Error Cylinder Comb
		IF nLine = 1 THEN
			F_SetError(16,nLine := 1);
			nState	:= 99;
		ELSIF nLine = 2 THEN
			F_SetError(34,nLine := 2);
			nState	:= 99;
		END_IF
	12:// Error Cylinder MoveComb
		IF nLine = 1 THEN
			F_SetError(18,nLine := 1);
			nState	:= 99;
		ELSIF nLine = 2 THEN
			F_SetError(36,nLine := 2);
			nState	:= 99;
		END_IF
	99:// Error
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="Init" Id="{ace05526-e93a-48fb-b372-82c4543adae8}">
      <Declaration><![CDATA[METHOD Init : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[nState		 := 0;
nStateEnable := 0;
bDoneTransfer := FALSE;
nDoneTransfer := 0;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Manual" Id="{f0c3f1b0-2965-4a71-87a8-d99df85f8ed8}">
      <Declaration><![CDATA[METHOD Manual : BOOL
VAR_INPUT
	bCylinder_Comb_Extend			: BOOL;
	bCylinder_Comb_Retract			: BOOL;
	bCylinder_Clip_Extend			: BOOL;
	bCylinder_Clip_Retract			: BOOL;
	bCylinder_Move_Comb_Extend		: BOOL;
	bCylinder_Move_Comb_Retract		: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF bCylinder_Comb_Extend THEN
	iCylinder_Comb.Extend();
	IF iCylinder_Comb.bIsExtend THEN
		fbTimer_Comb(IN := FALSE);
	ELSE
		fbTimer_Comb(PT := REAL_TO_TIME(fTimer_Comb)*1000);
			IF fbTimer_Comb.Q THEN
				IF nLine = 1 THEN
					F_SetError(18,nLine := 1);
				ELSIF nLine = 2 THEN
					F_SetError(40,nLine := 2);
				END_IF
			END_IF
	END_IF
END_IF

IF bCylinder_Comb_Retract THEN
	iCylinder_Comb.Retract();
	IF iCylinder_Comb.bIsRetract THEN
		fbTimer_Comb(IN := FALSE);
	ELSE
		fbTimer_Comb(PT := REAL_TO_TIME(fTimer_Comb)*1000);
			IF fbTimer_Comb.Q THEN
				IF nLine = 1 THEN
					F_SetError(17,nLine := 1);
				ELSIF nLine = 2 THEN
					F_SetError(39,nLine := 2);
				END_IF
			END_IF
	END_IF
END_IF

IF bCylinder_Clip_Extend THEN
	iCylinder_Clip.Extend();
	IF iCylinder_Clip.bIsExtend THEN
		fbTimer_Clip(IN := FALSE);
	ELSE
		fbTimer_Clip(PT := REAL_TO_TIME(fTimer_Clip)*1000);
			IF fbTimer_Clip.Q THEN
				IF nLine = 1 THEN
					F_SetError(20,nLine := 1);
				ELSIF nLine = 2 THEN
					F_SetError(42,nLine := 2);
				END_IF
			END_IF
	END_IF
END_IF


IF bCylinder_Clip_Retract THEN
	iCylinder_Clip.Retract();	
	IF iCylinder_Clip.bIsRetract THEN
		fbTimer_Clip(IN := FALSE);
	ELSE
		fbTimer_Clip(PT := REAL_TO_TIME(fTimer_Clip)*1000);
			IF fbTimer_Clip.Q THEN
				IF nLine = 1 THEN
					F_SetError(19,nLine := 1);
				ELSIF nLine = 2 THEN
					F_SetError(41,nLine := 2);
				END_IF
			END_IF
	END_IF
END_IF

IF bCylinder_Move_Comb_Extend THEN
	iCylinder_Move_Comb.Extend();
	IF iCylinder_Move_Comb.bIsExtend THEN
		fbTimer_Move_Comb(IN := FALSE);
	ELSE
		fbTimer_Move_Comb(PT := REAL_TO_TIME(fTimer_Move_Comb)*1000);
			IF fbTimer_Move_Comb.Q THEN
				IF nLine = 1 THEN
					F_SetError(22,nLine := 1);
				ELSIF nLine = 2 THEN
					F_SetError(44,nLine := 2);
				END_IF
			END_IF
	END_IF
END_IF

IF bCylinder_Move_Comb_Retract THEN
	iCylinder_Move_Comb.Retract();
	IF iCylinder_Move_Comb.bIsRetract THEN
		fbTimer_Move_Comb(IN := FALSE);
	ELSE
		fbTimer_Move_Comb(PT := REAL_TO_TIME(fTimer_Move_Comb)*1000);
			IF fbTimer_Move_Comb.Q THEN
				IF nLine = 1 THEN
					F_SetError(21,nLine := 1);
				ELSIF nLine = 2 THEN
					F_SetError(43,nLine := 2);
				END_IF
			END_IF
	END_IF
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Reset" Id="{5ffa7dd5-079f-4576-92a2-bcc40e8754a6}">
      <Declaration><![CDATA[METHOD Reset : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[iCylinder_Clip.Retract();
fbTimer_Clip(IN	:= FALSE);
fbTimer_Comb(IN	:= FALSE);
fbTimer_Move_Comb(IN := FALSE);

CASE nState_Reset OF
	0:
		iCylinder_Comb.Retract();
		tTimer_Reset(IN := TRUE, PT := T#300MS);
		IF tTimer_Reset.Q OR iCylinder_Comb.bIsRetract THEN
			nState_Reset := 1;
		END_IF
	1:
		iCylinder_Move_Comb.Retract();
		nState_Reset := 0;
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="Stop" Id="{baec0fc2-6e50-43ca-b136-2da2a4544107}">
      <Declaration><![CDATA[METHOD Stop : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbTimer_Clip(IN	:= FALSE);
fbTimer_Comb(IN	:= FALSE);
fbTimer_Move_Comb(IN := FALSE);
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Transfer">
      <LineId Id="9" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="26" Count="4" />
      <LineId Id="32" Count="4" />
      <LineId Id="31" Count="0" />
      <LineId Id="22" Count="0" />
    </LineIds>
    <LineIds Name="FB_Transfer.Auto">
      <LineId Id="56" Count="1" />
      <LineId Id="16" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="17" Count="1" />
      <LineId Id="223" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="22" Count="1" />
      <LineId Id="63" Count="0" />
      <LineId Id="196" Count="1" />
      <LineId Id="199" Count="1" />
      <LineId Id="64" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="201" Count="1" />
      <LineId Id="204" Count="1" />
      <LineId Id="133" Count="0" />
      <LineId Id="267" Count="0" />
      <LineId Id="269" Count="3" />
      <LineId Id="268" Count="0" />
      <LineId Id="273" Count="0" />
      <LineId Id="275" Count="3" />
      <LineId Id="274" Count="0" />
      <LineId Id="282" Count="0" />
      <LineId Id="285" Count="3" />
      <LineId Id="284" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="30" Count="1" />
      <LineId Id="66" Count="1" />
      <LineId Id="65" Count="0" />
      <LineId Id="32" Count="1" />
      <LineId Id="68" Count="0" />
      <LineId Id="206" Count="1" />
      <LineId Id="209" Count="1" />
      <LineId Id="69" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="152" Count="0" />
      <LineId Id="239" Count="0" />
      <LineId Id="237" Count="0" />
      <LineId Id="156" Count="1" />
      <LineId Id="163" Count="1" />
      <LineId Id="211" Count="3" />
      <LineId Id="263" Count="0" />
      <LineId Id="153" Count="0" />
      <LineId Id="240" Count="0" />
      <LineId Id="242" Count="1" />
      <LineId Id="241" Count="0" />
      <LineId Id="245" Count="16" />
      <LineId Id="244" Count="0" />
      <LineId Id="262" Count="0" />
      <LineId Id="181" Count="0" />
      <LineId Id="190" Count="0" />
      <LineId Id="184" Count="4" />
      <LineId Id="219" Count="3" />
      <LineId Id="189" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="84" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="13" Count="0" />
    </LineIds>
    <LineIds Name="FB_Transfer.Enable">
      <LineId Id="17" Count="2" />
      <LineId Id="12" Count="1" />
      <LineId Id="15" Count="1" />
      <LineId Id="20" Count="6" />
      <LineId Id="37" Count="0" />
      <LineId Id="28" Count="1" />
      <LineId Id="31" Count="3" />
      <LineId Id="30" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="40" Count="1" />
      <LineId Id="44" Count="2" />
      <LineId Id="43" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="50" Count="1" />
      <LineId Id="55" Count="1" />
      <LineId Id="52" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="60" Count="5" />
      <LineId Id="59" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="68" Count="5" />
      <LineId Id="67" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="14" Count="0" />
    </LineIds>
    <LineIds Name="FB_Transfer.Init">
      <LineId Id="5" Count="1" />
      <LineId Id="11" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_Transfer.Manual">
      <LineId Id="6" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="142" Count="10" />
      <LineId Id="97" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="153" Count="10" />
      <LineId Id="96" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="165" Count="10" />
      <LineId Id="164" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="29" Count="2" />
      <LineId Id="33" Count="0" />
      <LineId Id="178" Count="10" />
      <LineId Id="176" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="38" Count="1" />
      <LineId Id="41" Count="0" />
      <LineId Id="129" Count="10" />
      <LineId Id="45" Count="1" />
      <LineId Id="140" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="71" Count="2" />
      <LineId Id="125" Count="1" />
      <LineId Id="74" Count="4" />
      <LineId Id="127" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="124" Count="0" />
    </LineIds>
    <LineIds Name="FB_Transfer.Reset">
      <LineId Id="6" Count="0" />
      <LineId Id="12" Count="1" />
      <LineId Id="11" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="21" Count="7" />
      <LineId Id="20" Count="0" />
    </LineIds>
    <LineIds Name="FB_Transfer.Stop">
      <LineId Id="12" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>